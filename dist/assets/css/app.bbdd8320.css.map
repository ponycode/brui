{"version":3,"sources":["webpack:///src/src/App.vue","webpack:///src/components/src/components/BeerOnTap.vue","webpack:///src/views/src/views/Menu.vue","webpack:///src/components/src/components/BeerTapSettings.vue","webpack:///src/views/src/views/Taps.vue"],"names":[],"mappings":"AA2GA,uBACA,eAAA,AACA,gBAAA,AACA,iBAAA,CACA,AAEA,iCACA,sBAAA,AACA,mBAAA,AACA,eAAA,AACA,SAAA,AACA,UAAA,AACA,WAAA,AACA,YAAA,AACA,oBAAA,oBAAA,aAAA,AACA,yBAAA,sBAAA,mBAAA,AACA,wBAAA,qBAAA,uBAAA,AACA,cAAA,CACA,AAEA,qCACA,eAAA,AACA,UAAA,CACA,AAEA,4BACA,kBAAA,AACA,WAAA,AACA,SAAA,AACA,mBAAA,AACA,YAAA,AACA,aAAA,AACA,aAAA,AACA,mBAAA,AACA,YAAA,AACA,sBAAA,AACA,wBAAA,AACA,2CAAA,mCAAA,AACA,gCAAA,wBAAA,AACA,yCAAA,iCAAA,yBAAA,+CAAA,AACA,UAAA,CACA,AAEA,mCACA,yCAAA,gCAAA,CACA,AAEA,2BACA,yCAAA,iCAAA,yBAAA,8CAAA,CACA,AC9HA,oBACA,gBAAA,AACA,kBAAA,CACA,AAEA,oBACA,gBAAA,AACA,kBAAA,CACA,AAEA,4BACA,aAAA,AACA,gBAAA,AACA,oBAAA,oBAAA,aAAA,AACA,yBAAA,sBAAA,mBAAA,AACA,wBAAA,qBAAA,uBAAA,AACA,uBAAA,CACA,AAEA,gCACA,WAAA,AACA,YAAA,AACA,YAAA,AACA,aAAA,CACA,AAEA,uBACA,eAAA,AACA,gBAAA,AACA,gBAAA,CACA,AAEA,6BACA,eAAA,AACA,gBAAA,AACA,wBAAA,CACA,AAEA,8BACA,gBAAA,AACA,eAAA,AACA,gBAAA,AACA,wBAAA,CACA,AAEA,2BACA,gBAAA,AACA,iBAAA,AACA,wBAAA,CACA,AC9CA,8BACA,mBAAA,AACA,uDAAA,AACA,aAAA,AACA,UAAA,CACA,AAEA,oBACA,WAAA,AACA,gBAAA,AACA,2CAAA,AACA,eAAA,AACA,mBAAA,AACA,eAAA,CACA,AAEA,sDACA,WAAA,CACA,AAEA,qCACA,oBAAA,oBAAA,aAAA,AACA,yBAAA,sBAAA,mBAAA,AACA,wBAAA,qBAAA,sBAAA,CACA,ACiFA,4BACA,iBAAA,AACA,WAAA,AACA,aAAA,CACA,AAEA,gCACA,kBAAA,CACA,AC9GA,MACA,eAAA,CACA","file":"app.bbdd8320.css","sourcesContent":["<template>\n  <div class=\"root\">\n    <b-navbar toggleable=\"md\" type=\"dark\" variant=\"dark\" v-show=\"!fullscreen\">\n      <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n      <b-navbar-brand :to=\"{ name: 'menu' }\" @click=\"enterFullScreen\"><font-awesome-icon icon=\"arrows-alt\" /> BRUI</b-navbar-brand>\n\n      <b-collapse is-nav id=\"nav_collapse\">\n\n        <b-navbar-nav>\n          <b-nav-item :to=\"{ name: 'stats' }\">Stats</b-nav-item>\n        </b-navbar-nav>\n\n        <b-navbar-nav class=\"ml-auto\">\n          <b-nav-item :to=\"{ name: 'taps' }\">Taps / Beers</b-nav-item>\n          <b-nav-item :to=\"{ name: 'settings' }\"><font-awesome-icon icon=\"cog\" /> Settings</b-nav-item>\n        </b-navbar-nav>\n      </b-collapse>\n    </b-navbar>\n    \n    <router-view class=\"container-fluid\"/>\n    <a v-show=\"fullscreen\" @click=\"exitFullscreen\" class=\"exitFullscreen\">\n      <font-awesome-icon icon=\"compress-arrows-alt\" />\n    </a>\n\n    <div class=\"pourModal\" :class=\"{'pourModalVisible': currentPour }\">\n      <div v-if=\"currentPour\">\n        <h1 class=\"lead\">You are Pouring</h1>\n        <h2>{{currentPour.beerName}}</h2>\n        <h3 class=\"text-success\">{{Math.round( ((currentPour.milliliters || 0) * 0.0338 ) * 100 ) / 100}} floz</h3>\n\n        <div class=\"text-center mt-4\">\n          <svg width=\"111px\" height=\"150px\" viewBox=\"0 0 150 203\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n              <!-- Generator: Sketch 52.6 (67491) - http://www.bohemiancoding.com/sketch -->\n              <title>Beer</title>\n              <desc>Created with Sketch.</desc>\n              <defs>\n                  <path d=\"M102.6,189.5 L20.4,189.5 C18.2,189.5 16.4,187.7 16.4,185.5 L0.6,4.6 C0.6,2.4 2.4,0.6 4.6,0.6 L117.6,0.6 C119.8,0.6 121.6,2.4 121.6,4.6 L106.6,185.5 C106.6,187.8 104.8,189.5 102.6,189.5 Z\" id=\"path-1\"></path>\n              </defs>\n              <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g id=\"Beer\">\n                      <path d=\"M125.9,202.1 L22.5,202.1 C18.9,202.1 15.9,199.1 15.9,195.5 L0.7,7.4 C0.7,3.8 3.7,0.8 7.3,0.8 L142.8,0.8 C146.4,0.8 149.4,3.8 149.4,7.4 L132.4,195.5 C132.5,199.1 129.5,202.1 125.9,202.1 Z\" id=\"Glass\" fill=\"#FFFFFF\" opacity=\"0.08\"></path>\n                      <polygon id=\"Reflection\" fill=\"#FFFFFF\" opacity=\"0.2\" points=\"60.9 202.1 32 202.1 13 0.8 41.9 0.8\"></polygon>\n                      <g id=\"Glass\" transform=\"translate(14.000000, 1.000000)\">\n                          <mask id=\"mask-2\" fill=\"white\">\n                              <use xlink:href=\"#path-1\"></use>\n                          </mask>\n                          <g id=\"Path\"></g>\n                          <g id=\"BeerHead\" mask=\"url(#mask-2)\">\n                              <g transform=\"translate(-82.311516, 160.025045)\" id=\"Rectangle\" ref=\"beerHead\" class=\"beerHead\">\n                                  <rect fill=\"#FFB241\" x=\"0.3\" y=\"27.3\" width=\"294\" height=\"164.7\"></rect>\n                                  <rect fill=\"#FFEBD3\" x=\"0.3\" y=\"0\" width=\"294\" height=\"29.3\"></rect>\n                              </g>\n                          </g>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  computed: {\n    ...mapState({\n      fullscreen: state => state.fullscreen,\n      currentPour: state => state.currentPour,\n      beerInGlassOffset: state => {\n        if( !state.currentPour ) return 0;\n\n        const millilitersIn8Floz = 230;\n        const percentOfGlass = state.currentPour.milliliters / millilitersIn8Floz;\n        const totalMovement = 100;\n        return Math.round( totalMovement * percentOfGlass );\n      }\n    })\n  },\n  methods: {\n    enterFullScreen () {\n      this.$store.commit('FULLSCREEN', true)\n    },\n    exitFullscreen () {\n      this.$store.commit('FULLSCREEN', false)\n    }\n  },\n  watch: {\n    beerInGlassOffset( offset ){\n      if( !this.$refs.beerHead ) return;\n\n      const start = 160.025045; // stolen from original y translate in svg\n      this.$refs.beerHead.setAttribute(\"transform\",`translate(-82.311516, ${start - offset})`);\n    }\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.root {\n  min-width: 100%;\n  min-height: 100%;\n  position: relative;\n}\n\n.exitFullscreen {\n  background-color: black;\n  border-radius: 60px;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.exitFullscreen svg {\n  font-size: 26px;\n  color: white;\n}\n\n.pourModal{\n  position: absolute;\n  top: -430px;\n  left: 50%;\n  margin-left: -300px;\n  width: 600px;\n  height: 400px;\n  padding: 40px;\n  border-radius: 30px;\n  z-index: 999;\n  background-color: #222;\n  border: 2px solid silver;\n  box-shadow: 0 0 30px rgba( 0, 0, 0, 0.5 );\n  transform: translate3d( 0, 0, 0 );\n  transition: transform 0.3s;\n  color: white;\n}\n\n.pourModalVisible {\n    transform: translate3d( 0, 530px, 0 );\n}\n\n.beerHead{\n  transition: 0.5s transform;\n}\n\n</style>\n","<template>\n  <div class=\"beerOnTap text-center\" v-if=\"beer && !beer.empty\">\n    <h2>{{beer.name}}</h2>\n    <div class=\"beerImage\">\n      <img v-if=\"beer.imageUrl\" :src=\"beer.imageUrl\" />\n    </div>\n    <div><span class=\"spec\">{{beer.abv}}% <span class=\"unit\">ABV</span></span>, <span class=\"spec\">{{beer.ibu}} <span class=\"unit\">IBU</span></span></div>\n    <p class='description'>{{beer.description}}</p>\n  </div>\n  <div v-else>\n    <div class=\"emptyTap\">\n      <font-awesome-icon icon=\"sad-cry\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'beerOnTap',\n  props: {\n    beer: {\n      type: Object,\n      required: false\n    }\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\nh2{\n  font-weight: 400;\n  margin-bottom: 20px;\n}\n\nh5 {\n  font-weight: 200;\n  margin-bottom: 20px;\n}\n\n.beerImage {\n  height: 250px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 20px auto;\n}\n\n.beerImage img {\n  width: 100%;\n  height: auto;\n  margin: auto;\n  max-width: 80%;\n}\n\n.spec {\n  font-size: 30px;\n  font-weight: 300;\n  margin-right: 6px;\n}\n\n.spec .unit {\n  font-size: 20px;\n  font-weight: 100;\n  color: rgba( 255, 255, 255, 0.8 );\n}\n\n.description {\n  margin-top: 40px;\n  font-size: 20px;\n  font-weight: 300;\n  color: rgba( 255, 255, 255, 0.8 );\n}\n\n.emptyTap{\n  font-size: 100px;\n  margin-top: 100px;\n  color: rgba( 255, 255, 255, 0.2 );\n}\n\n</style>\n","<template>\n  <div class=\"container-fluid menuContent\">\n    <div class=\"row beerOnTapRow\">\n      <div class=\"col text-center beerOnTapCol\" v-for=\"tap in taps\" :key=\"tap.tapIndex\">\n        <h1>{{tap.tapName}}</h1>\n        <div class=\"beerOnTapContainer\">\n          <beer-on-tap :beer=\"tap.beer\"></beer-on-tap>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BeerOnTap from '@/components/BeerOnTap'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'menu',\n  components: {\n    BeerOnTap\n  },\n  computed: mapState({\n    taps: state => state.taps\n  }),\n  mounted () {\n    this.$store.dispatch('fetchTaps')\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.menuContent {\n  background: rgb(73,73,73);\n  background: radial-gradient(circle, rgba(73,73,73,1) 0%, rgba(0,0,0,1) 100%);\n  height: 100vh;\n  color: white;\n}\n\nh1 {\n  color: #ccc;\n  font-weight: 100;\n  border-bottom: 1px solid rgba( 255, 255, 255, 0.2 );\n  padding: 12px 0;\n  margin-bottom: 30px;\n  font-size: 1.8em;\n}\n\n.beerOnTapRow, .beer{\n  height: 100%;\n}\n\n.beerOnTapContainer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n</style>\n","<template>\n  <div class=\"beerTap\">\n    <b-form  v-on:submit.prevent=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-md-offset-2\" >\n          <b-form-checkbox\n            v-model=\"empty\"\n            class=\"emptyCheckbox\"\n          >\n            Empty Tap\n          </b-form-checkbox>\n\n          <div v-if=\"!empty\">\n\n            <b-form-group label=\"Name\" label-for=\"beerName\">\n              <b-form-input \n                            type=\"text\"\n                            v-model=\"name\"\n                            required\n                            placeholder=\"Beer name\">\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"Image\" label-for=\"beerImage\">\n              <b-form-input \n                            type=\"text\"\n                            v-model=\"imageUrl\"\n                            required\n                            placeholder=\"Beer image url\">\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"ABV\" label-for=\"abv\">\n              <b-form-input \n                            type=\"number\"\n                            v-model=\"abv\"\n                            required\n                            placeholder=\"ABV\">\n              </b-form-input>\n            </b-form-group>\n            \n            <b-form-group label=\"IBU\" label-for=\"ibu\">\n              <b-form-input \n                            type=\"number\"\n                            v-model=\"ibu\"\n                            required\n                            placeholder=\"IBU\">\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"Description\" label-for=\"description\">\n              <b-form-textarea \n                              v-model=\"description\"\n                              placeholder=\"Beer description\"\n                              :rows=\"3\"\n                              :max-rows=\"6\">\n              </b-form-textarea>\n            </b-form-group>\n\n          </div>\n\n        </div>\n        <div class=\"col-md-4\">\n          <img v-if=\"imageUrl && !empty\" :src=\"imageUrl\" class=\"beerImage\"/>\n        </div>\n      </div>\n    \n      <b-button type=\"submit\" variant=\"primary\">Save</b-button>\n\n    </b-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'beerTapSettings',\n  data () {\n    return {\n      name: null,\n      imageUrl: null,\n      abv: null,\n      ibu: null,\n      description: null,\n      empty: true\n    }\n  },\n  props: {\n    tap: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    async onSubmit () {\n      let beer = { empty: true };\n\n      if( !this.empty ){\n        beer = this.beer;\n      }\n\n      await this.$store.dispatch('saveBeer', { beer, tapIndex: this.tap.tapIndex })\n      this.$toasted.success('Beer Saved', { singleton: true }).goAway(3000)\n    }\n  },\n  computed: {\n    beer () {\n      const b = {};\n      b.name = this.name;\n      b.imageUrl = this.imageUrl;\n      b.abv = this.abv;\n      b.ibu = this.ibu;\n      b.description = this.description;\n      return b;\n    }\n  },\n  watch: {\n    tap: {\n      immediate: true,\n      handler () {\n        if (!this.tap ) return;\n        const {beer} = this.tap;\n        \n        this.empty = !beer\n\n        if (!beer) return\n        this.name = beer.name;\n        this.imageUrl = beer.imageUrl;\n        this.abv = beer.abv;\n        this.ibu = beer.ibu;\n        this.description = beer.description;\n      }\n    }\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.beerImage {\n  max-height: 300px;\n  width: auto;\n  margin: 0 auto;\n}\n\n.emptyCheckbox{\n  margin-bottom: 20px;\n}\n\n</style>\n","<template>\n  <div class=\"taps\" v-if=\"taps\">\n    <b-tabs>\n      <b-tab :title=\"tap.tapName\" v-for=\"tap in taps\" :key=\"tap.tapIndex\">\n        <b-row>\n          <b-col>\n            <br/>\n            <beer-tap-settings :tap=\"tap\"></beer-tap-settings>\n          </b-col>\n        </b-row>\n      </b-tab>\n    </b-tabs>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport BeerTapSettings from '@/components/BeerTapSettings'\n\nexport default {\n  name: 'taps',\n  components: {\n    BeerTapSettings\n  },\n  computed: {\n    ...mapState({\n      taps: state => state.taps\n    })\n  },\n  mounted () {\n    this.$store.dispatch( 'fetchTaps' )\n  }\n}\n</script>\n\n<style>\n.taps {\n  margin-top: 20px;\n}\n</style>\n"]}