{"version":3,"sources":["webpack:///src/src/App.vue","app.b76ea492.css","webpack:///src/components/src/components/KegOnTap.vue","webpack:///src/views/src/views/Menu.vue","webpack:///src/views/src/views/Beers.vue","webpack:///src/views/src/views/BeerDetails.vue"],"names":[],"mappings":"AA4HA,uBACA,cAAA,CACA,eAAA,CACA,iBC1HA,CD6HA,iCACA,qBAAA,CACA,kBAAA,CACA,cAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,cCrHA,CDwHA,qCACA,cAAA,CACA,UCtHA,CDyHA,4BACA,iBAAA,CACA,UAAA,CACA,QAAA,CACA,kBAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,kBAAA,CACA,WAAA,CACA,qBAAA,CACA,uBAAA,CACA,0CAAA,CAAA,kCAAA,CACA,+BAAA,CAAA,uBAAA,CACA,wCAAA,CAAA,gCAAA,CAAA,wBAAA,CAAA,8CAAA,CACA,UClHA,CDqHA,mCACA,wCAAA,CAAA,gCClHA,CDqHA,2BACA,wCAAA,CAAA,gCAAA,CAAA,wBAAA,CAAA,8CChHA,CCPA,oBACA,eAAA,CACA,kBDYA,CCTA,oBACA,eAAA,CACA,kBDWA,CCRA,4BACA,YAAA,CACA,eAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,uBDgBA,CCbA,gCACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,aDeA,CCZA,uBACA,cAAA,CACA,eAAA,CACA,gBDcA,CCXA,6BACA,cAAA,CACA,eAAA,CACA,wBDaA,CCVA,8BACA,eAAA,CACA,cAAA,CACA,eAAA,CACA,wBDYA,CEvDA,8BACA,kBAAA,CACA,sDAAA,CACA,YAAA,CACA,UF4DA,CEzDA,oBACA,UAAA,CACA,eAAA,CACA,0CAAA,CACA,cAAA,CACA,kBAAA,CACA,eF2DA,CExDA,sDACA,WF0DA,CEvDA,qCACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBF+DA,CE5DA,2BACA,eAAA,CACA,gBAAA,CACA,wBF8DA,CGhGA,+BACA,cHqGA,CIEA,4BACA,gBAAA,CACA,UAAA,CACA,aJGA","file":"app.b76ea492.css","sourcesContent":["<template>\n  <div class=\"root\">\n    <b-navbar toggleable=\"md\" type=\"dark\" variant=\"dark\" v-show=\"!fullscreen\">\n      <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n      <b-navbar-brand :to=\"{ name: 'menu' }\"><font-awesome-icon @click=\"enterFullScreen\" icon=\"arrows-alt\" class=\"mr-2\"/> BRUI</b-navbar-brand>\n\n      <b-collapse is-nav id=\"nav_collapse\">\n\n        <b-navbar-nav>\n        </b-navbar-nav>\n\n        <b-navbar-nav class=\"ml-auto\">\n          <b-nav-item :to=\"{ name: 'beers' }\">Beers</b-nav-item>\n          <b-nav-item :to=\"{ name: 'stats' }\">Stats</b-nav-item>\n          <b-nav-item :to=\"{ name: 'settings' }\"><font-awesome-icon icon=\"cog\" /> Settings</b-nav-item>\n        </b-navbar-nav>\n      </b-collapse>\n    </b-navbar>\n    \n    <router-view class=\"container-fluid\"/>\n    <a v-show=\"fullscreen\" @click=\"exitFullscreen\" class=\"exitFullscreen\">\n      <font-awesome-icon icon=\"compress-arrows-alt\" />\n    </a>\n\n    <div class=\"pourModal\" :class=\"{'pourModalVisible': currentPour }\">\n      <div v-if=\"currentPour\">\n        <h1 class=\"lead\">You are Pouring</h1>\n        <h2>{{currentPour.beerName}}</h2>\n        <h3 class=\"text-success\">{{Math.round( ((currentPour.milliliters || 0) * 0.0338 ) * 100 ) / 100}} floz</h3>\n\n        <div class=\"text-center mt-4\">\n          <svg width=\"111px\" height=\"150px\" viewBox=\"0 0 150 203\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n              <!-- Generator: Sketch 52.6 (67491) - http://www.bohemiancoding.com/sketch -->\n              <title>Beer</title>\n              <desc>Created with Sketch.</desc>\n              <defs>\n                  <path d=\"M102.6,189.5 L20.4,189.5 C18.2,189.5 16.4,187.7 16.4,185.5 L0.6,4.6 C0.6,2.4 2.4,0.6 4.6,0.6 L117.6,0.6 C119.8,0.6 121.6,2.4 121.6,4.6 L106.6,185.5 C106.6,187.8 104.8,189.5 102.6,189.5 Z\" id=\"path-1\"></path>\n              </defs>\n              <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g id=\"Beer\">\n                      <path d=\"M125.9,202.1 L22.5,202.1 C18.9,202.1 15.9,199.1 15.9,195.5 L0.7,7.4 C0.7,3.8 3.7,0.8 7.3,0.8 L142.8,0.8 C146.4,0.8 149.4,3.8 149.4,7.4 L132.4,195.5 C132.5,199.1 129.5,202.1 125.9,202.1 Z\" id=\"Glass\" fill=\"#FFFFFF\" opacity=\"0.08\"></path>\n                      <polygon id=\"Reflection\" fill=\"#FFFFFF\" opacity=\"0.2\" points=\"60.9 202.1 32 202.1 13 0.8 41.9 0.8\"></polygon>\n                      <g id=\"Glass\" transform=\"translate(14.000000, 1.000000)\">\n                          <mask id=\"mask-2\" fill=\"white\">\n                              <use xlink:href=\"#path-1\"></use>\n                          </mask>\n                          <g id=\"Path\"></g>\n                          <g id=\"BeerHead\" mask=\"url(#mask-2)\">\n                              <g transform=\"translate(-82.311516, 160.025045)\" id=\"Rectangle\" ref=\"beerHead\" class=\"beerHead\">\n                                  <rect fill=\"#FFB241\" x=\"0.3\" y=\"27.3\" width=\"294\" height=\"164.7\"></rect>\n                                  <rect fill=\"#FFEBD3\" x=\"0.3\" y=\"0\" width=\"294\" height=\"29.3\"></rect>\n                              </g>\n                          </g>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  computed: {\n    ...mapState({\n      fullscreen: state => state.fullscreen,\n      currentPour: state => state.currentPour,\n      beerInGlassOffset: state => {\n        if( !state.currentPour ) return 0;\n\n        const millilitersIn8Floz = 230;\n        const percentOfGlass = state.currentPour.milliliters / millilitersIn8Floz;\n        const totalMovement = 100;\n        return Math.round( totalMovement * percentOfGlass );\n      }\n    })\n  },\n  methods: {\n    enterFullScreen () {\n      if( document.fullscreenEnabled ){\n          document.documentElement.requestFullscreen();\n      }\n      this.$store.commit('FULLSCREEN', true)\n    },\n    exitFullscreen () {\n      if( document.fullscreenEnabled ){\n        document.exitFullscreen();\n      }\n      this.$store.commit('FULLSCREEN', false)\n    }\n  },\n  watch: {\n    beerInGlassOffset( offset ){\n      if( !this.$refs.beerHead ) return;\n\n      const start = 160.025045; // stolen from original y translate in svg\n      this.$refs.beerHead.setAttribute(\"transform\",`translate(-82.311516, ${start - offset})`);\n    }\n  },\n  mounted () {\n    document.addEventListener( 'fullscreenchange', () => {\n      if( document.fullscreenEnabled ){\n        if( document.fullscreenElement ){\n          this.$store.commit('FULLSCREEN', true)\n        } else {\n          this.$store.commit('FULLSCREEN', false)\n        }\n      }\n    });\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.root {\n  min-width: 100%;\n  min-height: 100%;\n  position: relative;\n}\n\n.exitFullscreen {\n  background-color: black;\n  border-radius: 60px;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.exitFullscreen svg {\n  font-size: 26px;\n  color: white;\n}\n\n.pourModal{\n  position: absolute;\n  top: -430px;\n  left: 50%;\n  margin-left: -300px;\n  width: 600px;\n  height: 400px;\n  padding: 40px;\n  border-radius: 30px;\n  z-index: 999;\n  background-color: #222;\n  border: 2px solid silver;\n  box-shadow: 0 0 30px rgba( 0, 0, 0, 0.5 );\n  transform: translate3d( 0, 0, 0 );\n  transition: transform 0.3s;\n  color: white;\n}\n\n.pourModalVisible {\n    transform: translate3d( 0, 530px, 0 );\n}\n\n.beerHead{\n  transition: 0.5s transform;\n}\n\n</style>\n","\n.root[data-v-9d5ed920] {\n  min-width: 100%;\n  min-height: 100%;\n  position: relative;\n}\n.exitFullscreen[data-v-9d5ed920] {\n  background-color: black;\n  border-radius: 60px;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  width: 40px;\n  height: 40px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  cursor: pointer;\n}\n.exitFullscreen svg[data-v-9d5ed920] {\n  font-size: 26px;\n  color: white;\n}\n.pourModal[data-v-9d5ed920]{\n  position: absolute;\n  top: -430px;\n  left: 50%;\n  margin-left: -300px;\n  width: 600px;\n  height: 400px;\n  padding: 40px;\n  border-radius: 30px;\n  z-index: 999;\n  background-color: #222;\n  border: 2px solid silver;\n  -webkit-box-shadow: 0 0 30px rgba( 0, 0, 0, 0.5 );\n          box-shadow: 0 0 30px rgba( 0, 0, 0, 0.5 );\n  -webkit-transform: translate3d( 0, 0, 0 );\n          transform: translate3d( 0, 0, 0 );\n  -webkit-transition: -webkit-transform 0.3s;\n  transition: -webkit-transform 0.3s;\n  transition: transform 0.3s;\n  transition: transform 0.3s, -webkit-transform 0.3s;\n  color: white;\n}\n.pourModalVisible[data-v-9d5ed920] {\n    -webkit-transform: translate3d( 0, 530px, 0 );\n            transform: translate3d( 0, 530px, 0 );\n}\n.beerHead[data-v-9d5ed920]{\n  -webkit-transition: 0.5s -webkit-transform;\n  transition: 0.5s -webkit-transform;\n  transition: 0.5s transform;\n  transition: 0.5s transform, 0.5s -webkit-transform;\n}\n\n\n\nh2[data-v-9d39a69e]{\n  font-weight: 400;\n  margin-bottom: 20px;\n}\nh5[data-v-9d39a69e] {\n  font-weight: 200;\n  margin-bottom: 20px;\n}\n.beerImage[data-v-9d39a69e] {\n  height: 250px;\n  overflow: hidden;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  margin: 0 auto 20px auto;\n}\n.beerImage img[data-v-9d39a69e] {\n  width: 100%;\n  height: auto;\n  margin: auto;\n  max-width: 80%;\n}\n.spec[data-v-9d39a69e] {\n  font-size: 30px;\n  font-weight: 300;\n  margin-right: 6px;\n}\n.spec .unit[data-v-9d39a69e] {\n  font-size: 20px;\n  font-weight: 100;\n  color: rgba( 255, 255, 255, 0.8 );\n}\n.description[data-v-9d39a69e] {\n  margin-top: 40px;\n  font-size: 20px;\n  font-weight: 300;\n  color: rgba( 255, 255, 255, 0.8 );\n}\n\n\n\n.menuContent[data-v-1c42c0f5] {\n  background: rgb(73,73,73);\n  background: radial-gradient(circle, rgba(73,73,73,1) 0%, rgba(0,0,0,1) 100%);\n  height: 100vh;\n  color: white;\n}\nh1[data-v-1c42c0f5] {\n  color: #ccc;\n  font-weight: 100;\n  border-bottom: 1px solid rgba( 255, 255, 255, 0.2 );\n  padding: 12px 0;\n  margin-bottom: 30px;\n  font-size: 1.8em;\n}\n.beerOnTapRow[data-v-1c42c0f5], .beer[data-v-1c42c0f5]{\n  height: 100%;\n}\n.beerOnTapContainer[data-v-1c42c0f5] {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.emptyTap[data-v-1c42c0f5]{\n  font-size: 100px;\n  margin-top: 100px;\n  color: rgba( 255, 255, 255, 0.2 );\n}\n\n\n\n.beerTable td[data-v-302f99cd] {\n  cursor: pointer;\n}\n\n\n\n.beerImage[data-v-117a9c0e] {\n  max-height: 300px;\n  width: auto;\n  margin: 0 auto;\n}\n\n\n\n/*# sourceMappingURL=app.b76ea492.css.map*/","<template>\n  <div class=\"beerOnTap text-center\" v-if=\"beer && !beer.empty\">\n    <h2 class=\"mb-1\">{{beer.name}}</h2>\n    <b-button class=\"mt-0 mb-2\" v-if=\"!fullscreen\" variant=\"outline-danger\" size=\"sm\" v-b-modal=\"'removeKegConfirmation-' + tapIndex\"><font-awesome-icon icon=\"times-circle\" class=\"mr-2\"/>Remove Keg</b-button>\n    <div class=\"beerImage mt-3\">\n      <img v-if=\"beer.imageUrl\" :src=\"beer.imageUrl\" />\n    </div>\n    <div><span class=\"spec\">{{beer.abv}}% <span class=\"unit\">ABV</span></span>, <span class=\"spec\">{{beer.ibu}} <span class=\"unit\">IBU</span></span></div>\n    <p class='description'>{{beer.description}}</p>\n\n    <b-modal :id=\"'removeKegConfirmation-' + tapIndex\" title=\"Remove Keg?\" ref=\"modal\" size=\"sm\" ok-title=\"Yes, Remove Keg\" ok-variant=\"danger\" @ok=\"removeKeg\">\n      <h3>{{beer.name}}</h3>\n      <p class=\"mt-3\">\n        Removing this keg will finalize all pour reporting.\n      </p>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'kegOnTap',\n  props: {\n    tapIndex: {\n      type: Number,\n      required: true\n    },\n    keg: {\n      type: Object,\n      required: false\n    }\n  },\n  computed: {\n    ...mapState({\n      fullscreen: state => state.fullscreen\n    }),\n    beer () {\n      if( !this.keg ) return null\n      return this.keg.Beer\n    }\n  },\n  methods: {\n    removeKeg(){\n      this.$store.dispatch( 'removeKegFromTap', { tapIndex: this.tapIndex })\n    }\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\nh2{\n  font-weight: 400;\n  margin-bottom: 20px;\n}\n\nh5 {\n  font-weight: 200;\n  margin-bottom: 20px;\n}\n\n.beerImage {\n  height: 250px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 20px auto;\n}\n\n.beerImage img {\n  width: 100%;\n  height: auto;\n  margin: auto;\n  max-width: 80%;\n}\n\n.spec {\n  font-size: 30px;\n  font-weight: 300;\n  margin-right: 6px;\n}\n\n.spec .unit {\n  font-size: 20px;\n  font-weight: 100;\n  color: rgba( 255, 255, 255, 0.8 );\n}\n\n.description {\n  margin-top: 40px;\n  font-size: 20px;\n  font-weight: 300;\n  color: rgba( 255, 255, 255, 0.8 );\n}\n\n</style>\n","<template>\n  <div class=\"container-fluid menuContent\">\n    <div class=\"row beerOnTapRow\">\n      <div class=\"col text-center beerOnTapCol\" v-for=\"tap in taps\" :key=\"tap.tapIndex\">\n        <h1>{{tap.tapName}}</h1>\n        <div class=\"beerOnTapContainer\">\n          <keg-on-tap v-if=\"tap.Keg\" :keg=\"tap.Keg\" :tap-index=\"tap.tapIndex\"></keg-on-tap>\n          <div v-else>\n            <div class=\"emptyTap\">\n              <font-awesome-icon icon=\"sad-cry\" />\n            </div>\n            <b-button v-if=\"!fullscreen\" size=\"sm\" variant=\"outline-light\" @click=\"addAKeg(tap.tapIndex)\">Add a Keg</b-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <add-a-keg-modal ref=\"addAKegModal\"></add-a-keg-modal>\n  </div>\n</template>\n\n<script>\nimport KegOnTap from '@/components/KegOnTap'\nimport AddAKegModal from '@/components/AddAKegModal'\n\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'menu',\n  components: {\n    KegOnTap,\n    AddAKegModal\n  },\n  computed: mapState({\n    fullscreen: state => state.fullscreen,\n    taps: state => state.taps\n  }),\n  methods: {\n    removeKegOnTapWithIndex( tapIndex ){\n      this.$store.dispatch( 'removeKegFromTap', { tapIndex })\n    },\n    addAKeg( tapIndex ){\n      this.$refs.addAKegModal.show( tapIndex )\n    }\n  },\n  mounted () {\n    this.$store.dispatch('fetchTaps')\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.menuContent {\n  background: rgb(73,73,73);\n  background: radial-gradient(circle, rgba(73,73,73,1) 0%, rgba(0,0,0,1) 100%);\n  height: 100vh;\n  color: white;\n}\n\nh1 {\n  color: #ccc;\n  font-weight: 100;\n  border-bottom: 1px solid rgba( 255, 255, 255, 0.2 );\n  padding: 12px 0;\n  margin-bottom: 30px;\n  font-size: 1.8em;\n}\n\n.beerOnTapRow, .beer{\n  height: 100%;\n}\n\n.beerOnTapContainer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.emptyTap{\n  font-size: 100px;\n  margin-top: 100px;\n  color: rgba( 255, 255, 255, 0.2 );\n}\n\n</style>\n","<template>\n  <div class=\"beers\">\n    <br/>\n    <h1>Beers</h1>\n    \n    <b-table v-if=\"beers\" class=\"beerTable\" striped hover :items=\"beers\" :fields=\"fields\" :no-select-on-click=\"true\" @row-clicked=\"showDetails\">\n      <template v-slot:head(name)>\n        <div class=\"d-flex align-items-center justify-content-between\">\n            Beer Name: <b-button size=\"xs\" variant=\"primary\" to=\"/beers/new\">New Beer</b-button>\n        </div>\n      </template>\n    </b-table>\n\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  name: 'beers',\n  data () {\n    return {\n      fields: [{ key: 'name', label: 'Full Name' }]\n    };\n  },\n  computed: {\n    ...mapState({\n      beers: state => state.mostRecentBeers\n    })\n  },\n  methods: {\n    showDetails ({ beerId }) {\n      this.$router.push({ name: 'beerDetails', params: { beerId } })\n    },\n    newBeer () {\n      this.$router.push({ name: 'beerDetails' })\n    }\n  },\n  async mounted () {\n    await this.$store.dispatch('fetchMostRecentBeers')\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.beerTable td {\n  cursor: pointer;\n}\n\n</style>\n","<template>\n  <div class=\"beerDetails mt-3\">\n\n    <router-link to=\"/beers\"><font-awesome-icon icon=\"chevron-left\" /> All Beers</router-link>\n\n    <b-form v-on:submit.prevent=\"onSubmit\">\n      <div class=\"row mt-3\">\n\n        <div class=\"col-md-6 col-md-offset-2\" >\n          <div>\n\n            <b-form-group label=\"Name\" label-for=\"beerName\">\n              <b-form-input \n                            type=\"text\"\n                            v-model=\"name\"\n                            required\n                            placeholder=\"Beer name\">\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"Image\" label-for=\"beerImage\">\n              <b-form-input \n                            type=\"text\"\n                            v-model=\"imageUrl\"\n                            placeholder=\"Beer image url\">\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"ABV\" label-for=\"abv\">\n              <b-form-input \n                            v-model=\"abv\"\n                            placeholder=\"ABV\">\n              </b-form-input>\n            </b-form-group>\n            \n            <b-form-group label=\"IBU\" label-for=\"ibu\">\n              <b-form-input \n                            type=\"number\"\n                            v-model=\"ibu\"\n                            placeholder=\"IBU\">\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"Description\" label-for=\"description\">\n              <b-form-textarea \n                              v-model=\"description\"\n                              placeholder=\"Beer description\"\n                              :rows=\"3\"\n                              :max-rows=\"6\">\n              </b-form-textarea>\n            </b-form-group>\n\n          </div>\n\n        </div>\n        <div class=\"col-md-4\">\n          <img v-if=\"imageUrl && !empty\" :src=\"imageUrl\" class=\"beerImage\"/>\n        </div>\n      </div>\n    \n      <b-button variant=\"default-outline\" @click=\"reset\">Reset</b-button>\n      <b-button type=\"submit\" variant=\"primary\">{{saveButtonTitle}}</b-button>\n\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  name: 'beerDetails',\n  props: {\n    beerId: {\n      type: String,\n      required: false\n    }\n  },\n  data () {\n    return {\n      name: null,\n      imageUrl: null,\n      abv: null,\n      ibu: null,\n      description: null,\n      empty: true\n    }\n  },\n  methods: {\n    async onSubmit () {\n      if( this.beerId ) {\n        await this.$store.dispatch('updateBeerDetails', this.updatedBeer )\n        this.$toasted.success('Beer Updated', { singleton: true }).goAway(3000)\n      } else {\n        await this.$store.dispatch('createNewBeer', this.updatedBeer )\n        this.$toasted.success('Beer Created', { singleton: true }).goAway(3000)\n      }\n    },\n    reset () {\n      const beer = this.beer\n      if( !beer ) return\n\n      this.name = beer.name\n      this.imageUrl = beer.imageUrl\n      this.abv = beer.abv\n      this.ibu = beer.ibu\n      this.description = beer.description\n    }\n  },\n  computed: {\n    ...mapState({\n      beer: state => state.beerDetails\n    }),\n    saveButtonTitle () {\n      if ( this.beerId ) {\n        return 'Update Beer'\n      } else { \n        return 'Create Beer'\n      }\n    },\n    updatedBeer () {\n      const b = {};\n      if( this.beerId ) b.beerId = this.beerId;\n      b.name = this.name;\n      b.imageUrl = this.imageUrl;\n      b.abv = this.abv;\n      b.ibu = this.ibu;\n      b.description = this.description;\n      return b;\n    }\n  },\n  watch: {\n    beer: {\n      immediate: true,\n      handler () {\n        if( !this.beerId && this.beer.beerId ){\n          // created a new beer - update url and UI\n          return this.$router.push({ name: 'beerDetails', params: { beerId: this.beer.beerId } })\n        }\n        this.reset() // copy data into local data so it can be edited\n      }\n    }\n  },\n  async mounted () {\n    await this.$store.dispatch('fetchBeerDetails', this.beerId )\n  }\n}\n</script>\n\n<style type=\"scss\" scoped>\n\n.beerImage {\n  max-height: 300px;\n  width: auto;\n  margin: 0 auto;\n}\n\n</style>\n"]}